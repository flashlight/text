# flashlight-text
#
# IMPORTED targets
# ^^^^^^^^^^^^^^^^
#
# Configuration file for flashlight-text. Provides the following
# `IMPORTED` targets:
#
# ``flashlight::flashlight-text``
#   The flashlight-text library.
#
# The above targets can be linked with your build using ``target_link_library``.
# Example:
#
#   add_executable(myexecutable mySource.cpp)
#   target_link_library(myexecutable PRIVATE flashlight::flashlight-text)
#
# The above properly links flashlight-text with myexecutable. No call to
# ``target_include_directories`` is required.
#

# Dependencies
include(CMakeFindDependencyMacro)
find_dependency(Threads)
# If not building standalone, don't try to find upstream deps,
# as many of these find modules won't exist
if (@FL_TEXT_BUILD_STANDALONE@)
  list(APPEND CMAKE_MODULE_PATH ${CMAKE_CURRENT_LIST_DIR})
  if (@FL_TEXT_USE_KENLM@)
    find_dependency(kenlm)
  endif()
  # Remove this dir from module path
  list(REMOVE_AT CMAKE_MODULE_PATH -1)
endif() # FL_TEXT_BUILD_STANDALONE

################################################################################

@PACKAGE_INIT@

# Add IMPORTED targets
if(NOT TARGET flashlight::flashlight-text)
  if(EXISTS @PACKAGE_CMAKE_DIR@/flashlight-text-targets.cmake)
    include(@PACKAGE_CMAKE_DIR@/flashlight-text-targets.cmake)
  endif()
endif()

# Flashlight variables for downstream config use
set(FL_TEXT_USE_KENLM @FL_TEXT_USE_KENLM@)

# For legacy configurations
set(flashlight-text_LIBRARIES flashlight::flashlight-text)
if (EXISTS @PACKAGE_INCLUDE_DIRS@)
  set(flashlight-text_INCLUDE_DIRS @PACKAGE_INCLUDE_DIRS@)
endif()
set(flashlight-text_FOUND 1)
